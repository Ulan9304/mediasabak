# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-25 08:38
from __future__ import unicode_literals

import ckeditor_uploader.fields
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=64, unique=True, verbose_name='Name of user')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='Email_address')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Phone number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ImageSlide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='slide name')),
                ('image', models.ImageField(upload_to='', verbose_name='image')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='create date')),
            ],
            options={
                'verbose_name': 'Слайдер',
                'verbose_name_plural': 'Слайдеры',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Текст урока')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка на медиа')),
                ('date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('is_active', models.BooleanField(default=False, verbose_name='Потвержденно')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
            },
        ),
        migrations.CreateModel(
            name='LessonCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('image_field', models.ImageField(upload_to='', verbose_name='icon image')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_models.Lesson')),
            ],
            options={
                'verbose_name': 'Категория урока',
                'verbose_name_plural': 'Категория уроков',
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_file', models.FileField(upload_to='', verbose_name='Медиа файл')),
                ('link', models.CharField(max_length=255, verbose_name='Ссылка на медиа')),
                ('date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_models.Lesson')),
            ],
            options={
                'verbose_name': 'Медиа',
                'verbose_name_plural': 'Медиа',
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='question test')),
                ('image', models.ImageField(upload_to='', verbose_name='picture test')),
                ('correct', models.CharField(blank=True, max_length=500, verbose_name='right answer message')),
                ('incorrect', models.CharField(blank=True, max_length=500, verbose_name='wrong answer message')),
                ('true_answer', models.BooleanField(verbose_name='true test answer')),
                ('false_answer', models.BooleanField(verbose_name='false test anser')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_models.LessonCategory'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='test',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_models.Test', verbose_name='Выберите тест'),
        ),
        migrations.AddField(
            model_name='imageslide',
            name='lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app_models.Lesson'),
        ),
    ]
